<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://camel.apache.org/schema/spring	http://camel.apache.org/schema/spring/camel-spring-2.13.0.xsd
       http://www.springframework.org/schema/context	http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<context:property-placeholder ignore-unresolvable="true" location="classpath:prop/df-qq-cfg.properties" />
	
	<camelContext id="qq.dataflowcontext" xmlns="http://camel.apache.org/schema/spring">
		<propertyPlaceholder id="test.props" location="classpath:prop/df-common-cfg.properties,classpath:prop/df-qq-cfg.properties" />
		<endpoint uri="seda:asyncSecondStage?waitForTaskToComplete=Never&amp;concurrentConsumers={{common.seda.threadcount}}&amp;blockWhenFull=true&amp;size={{common.seda.queuesize}}&amp;timeout={{common.seda.queuesize}}" id="secondStage" />
		
		<route id="qq">
			<from uri="{{qq.httpserver.mode}}:http://{{common.ip}}:{{qq.httpserver.port}}/{{common.projectname}}/{{qq.httpserver.uri}}{{qq.httpserver.params}}" />
			<to uri="seda:asyncSecondStage?waitForTaskToComplete=Never&amp;concurrentConsumers={{common.seda.threadcount}}&amp;blockWhenFull=true&amp;size={{common.seda.queuesize}}&amp;timeout={{common.seda.queuesize}}"/>
		</route>
		
		<route>
			<from ref="secondStage" />
			<to uri="bean:plugins4QQ?method=rcv" />
			<to uri="bean:plugins4QQ?method=saveDb" />
			<to uri="bean:plugins4QQ?method=alert" />
		</route>
	</camelContext>
</beans>